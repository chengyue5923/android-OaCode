// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.Other.proto

package com.mogujie.tt.protobuf;

public final class IMOther {
    static {
    }

    private IMOther() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public interface IMHeartBeatOrBuilder extends
            // @@protoc_insertion_point(interface_extends:IM.Other.IMHeartBeat)
            com.google.protobuf.MessageLiteOrBuilder {
    }

    /**
     * Protobuf type {@code IM.Other.IMHeartBeat}
     * <p/>
     * <pre>
     * cmd id:  		0x0701
     * </pre>
     */
    public static final class IMHeartBeat extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:IM.Other.IMHeartBeat)
            IMHeartBeatOrBuilder {
        private static final IMHeartBeat defaultInstance;
        private static final long serialVersionUID = 0L;
        public static com.google.protobuf.Parser<IMHeartBeat> PARSER =
                new com.google.protobuf.AbstractParser<IMHeartBeat>() {
                    public IMHeartBeat parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new IMHeartBeat(input, extensionRegistry);
                    }
                };

        static {
            defaultInstance = new IMHeartBeat(true);
            defaultInstance.initFields();
        }

        private final com.google.protobuf.ByteString unknownFields;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use IMHeartBeat.newBuilder() to construct.
        private IMHeartBeat(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private IMHeartBeat(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private IMHeartBeat(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static IMHeartBeat getDefaultInstance() {
            return defaultInstance;
        }

        public static com.mogujie.tt.protobuf.IMOther.IMHeartBeat parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.mogujie.tt.protobuf.IMOther.IMHeartBeat parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.mogujie.tt.protobuf.IMOther.IMHeartBeat parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.mogujie.tt.protobuf.IMOther.IMHeartBeat parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.mogujie.tt.protobuf.IMOther.IMHeartBeat parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.mogujie.tt.protobuf.IMOther.IMHeartBeat parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static com.mogujie.tt.protobuf.IMOther.IMHeartBeat parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static com.mogujie.tt.protobuf.IMOther.IMHeartBeat parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static com.mogujie.tt.protobuf.IMOther.IMHeartBeat parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.mogujie.tt.protobuf.IMOther.IMHeartBeat parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(com.mogujie.tt.protobuf.IMOther.IMHeartBeat prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public IMHeartBeat getDefaultInstanceForType() {
            return defaultInstance;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<IMHeartBeat> getParserForType() {
            return PARSER;
        }

        private void initFields() {
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            output.writeRawBytes(unknownFields);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code IM.Other.IMHeartBeat}
         * <p/>
         * <pre>
         * cmd id:  		0x0701
         * </pre>
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.IMOther.IMHeartBeat, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:IM.Other.IMHeartBeat)
                com.mogujie.tt.protobuf.IMOther.IMHeartBeatOrBuilder {
            // Construct using com.mogujie.tt.protobuf.IMOther.IMHeartBeat.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private static Builder create() {
                return new Builder();
            }

            private void maybeForceBuilderInitialization() {
            }

            public Builder clear() {
                super.clear();
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.mogujie.tt.protobuf.IMOther.IMHeartBeat getDefaultInstanceForType() {
                return com.mogujie.tt.protobuf.IMOther.IMHeartBeat.getDefaultInstance();
            }

            public com.mogujie.tt.protobuf.IMOther.IMHeartBeat build() {
                com.mogujie.tt.protobuf.IMOther.IMHeartBeat result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.mogujie.tt.protobuf.IMOther.IMHeartBeat buildPartial() {
                com.mogujie.tt.protobuf.IMOther.IMHeartBeat result = new com.mogujie.tt.protobuf.IMOther.IMHeartBeat(this);
                return result;
            }

            public Builder mergeFrom(com.mogujie.tt.protobuf.IMOther.IMHeartBeat other) {
                if (other == com.mogujie.tt.protobuf.IMOther.IMHeartBeat.getDefaultInstance())
                    return this;
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.mogujie.tt.protobuf.IMOther.IMHeartBeat parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.mogujie.tt.protobuf.IMOther.IMHeartBeat) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            // @@protoc_insertion_point(builder_scope:IM.Other.IMHeartBeat)
        }

        // @@protoc_insertion_point(class_scope:IM.Other.IMHeartBeat)
    }

    // @@protoc_insertion_point(outer_class_scope)
}
